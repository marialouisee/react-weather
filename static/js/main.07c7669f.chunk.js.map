{"version":3,"sources":["context/Reducer.js","context/Context.js","context/GlobalState.js","images/bgImage3.svg","components/Location.js","components/SearchBar.js","components/MyNavbar.js","components/Clouds.js","components/CurrentCard.js","components/Forecast3H.js","components/ForecastTomorrow.js","components/ForecastCard.js","App.js","index.js"],"names":["Reducer","state","action","type","weather","payload","forecast","city","Context","createContext","GlobalState","props","useReducer","dispatch","apiKey","apiUrlWeather","apiUrlForecast","useEffect","fetch","then","res","ok","alert","json","data","Provider","value","children","CurrentLocation","useState","lat","setLat","long","setLong","useContext","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","onClick","size","SearchBar","currInput","setCurrInput","className","onSubmit","e","preventDefault","onChange","target","placeholder","startsWith","slice","toUpperCase","MyNavbar","to","activeClassName","Clouds","console","log","description","list","color","width","height","main","wIcons","CurrentCard","temp","toFixed","feelTemp","feels_like","wind","speed","Forecast3H","ForecastTomorrow","date","temp_min","temp_max","Date","nextDay","setDate","getDate","year","getFullYear","month","getMonth","day","nextDayString","filteredState","map","item","index","dt_txt","indexOf","arrAllIndex","nextDate","i","ForecastCard","App","style","backgroundImage","bgImage","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.07c7669f.chunk.js","sourcesContent":["import React from 'react'\n\nconst Reducer = (state, action) => {\n    // console.log(action.payload)\n    switch (action.type) {\n        case 'set-data-weather':\n            return {...state, weather: action.payload};\n        case 'set-data-forecast':\n            return {...state, forecast: action.payload};\n        case 'set-city':\n            return {...state, city: action.payload};\n        case 'set-type':\n            return {...state, type: action.payload}\n\n        default: \n            return state;\n    }\n}\n\nexport default Reducer\n","import { createContext } from \"react\";\nconst Context = createContext();\nexport default Context;","\nimport React , {useReducer, useEffect} from 'react'\nimport Reducer from './Reducer'\nimport Context from './Context'\n\nconst GlobalState = (props) => {\n\n  // type = weather or forecast\n  const initialState = {\n    city: 'q=Hamburg', \n    weather: [], \n    forecast: [], \n    type: 'weather'\n    }\n\n  const [state, dispatch] = useReducer(Reducer, initialState)\n\n  // API KEY AND URL \n  //! hide API key\n  const apiKey = \"e4efe9b0c2159b5e049dbb5024702093\";\n  const apiUrlWeather = `https://api.openweathermap.org/data/2.5/weather?${state.city}&appid=${apiKey}&units=metric`;\n  const apiUrlForecast = `https://api.openweathermap.org/data/2.5/forecast?${state.city}&appid=${apiKey}&units=metric`;\n\n\n  useEffect(() => {\n    fetch(apiUrlWeather)\n        .then((res) => {\n          if (!res.ok) {\n            alert('please try again')\n          }\n          return res.json();\n        })\n        .then((data)=> {dispatch({type: 'set-data-weather', payload: data})})\n  }, [apiUrlWeather])\n\n  useEffect(() => {\n    fetch(apiUrlForecast)\n        .then((res) => {\n          return res.json();\n        })\n        .then((data)=> {dispatch({type: 'set-data-forecast', payload: data})})\n  }, [apiUrlForecast])\n\n    return (\n        <Context.Provider value = {{state, dispatch}} >\n            {props.children}\n        </Context.Provider> \n    )\n}\n\nexport default GlobalState\n","export default __webpack_public_path__ + \"static/media/bgImage3.afb6443e.svg\";","import React , {useContext, useState, useEffect} from 'react';\nimport Context from '../context/Context';\nimport {GoLocation} from \"react-icons/go\";\n\nconst CurrentLocation = () => {\n\n  const [lat, setLat] = useState([]);\n  const [long, setLong] = useState([]);\n\n  const {dispatch} = useContext(Context)\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(function(position) {\n      setLat(position.coords.latitude);\n      setLong(position.coords.longitude);\n    });\n  }, [lat, long]);\n\n  const setCurrLocation = () =>{\n    dispatch({type: 'set-city', payload: `lat=${lat}&lon=${long}`})\n  }\n\n    return (\n        <div onClick={setCurrLocation}>\n            <GoLocation size={20} />\n        </div>\n    )\n}\n\nexport default CurrentLocation\n","import React , {useContext, useState} from 'react';\nimport Context from '../context/Context'\nimport { BsSearch } from \"react-icons/bs\";\nimport CurrentLocation from './Location';\n\n\nconst SearchBar = () => {\n\n    const {state, dispatch} = useContext(Context)\n\n    const [currInput, setCurrInput] = useState('')\n \n    const handleSubmit =(e)=> {\n        e.preventDefault()\n        dispatch({type: 'set-city', payload: `q=${currInput}` })\n        setCurrInput('')\n    }\n\n    return (\n        <div className='searchBar'>\n            <div className='flex'>\n               <form onSubmit={handleSubmit}>\n                        <input onChange={(e)=> {setCurrInput(e.target.value)}} value={currInput} placeholder='your city please...'/>\n                        <button type='submit'><BsSearch/></button>\n                </form> \n                <CurrentLocation/>\n            </div>\n            <div className='header'>\n                <h1> {state.city.startsWith('lat=') ? `YOUR WEATHER IN YOUR CURRENT LOCATION` : `YOUR WEATHER IN ${state.city.slice(2).toUpperCase()}`} </h1>\n            </div>\n        </div>\n    )\n}\n\nexport default SearchBar\n","import React, {useContext} from 'react'\nimport { NavLink} from \"react-router-dom\";\nimport Context from '../context/Context'\n\n\nconst MyNavbar = () => {\n    const {dispatch} = useContext(Context)\n\n    const setTypeNow =()=>{\n        dispatch({type: 'set-type', payload: 'weather'})\n    }\n\n    const setTypeForecast =()=>{\n        dispatch({type: 'set-type', payload: 'forecast'})\n    }\n\n    return (\n        <nav className='nav'>\n            <ul>\n                <li><NavLink onClick={setTypeNow} to='/now' activeClassName='active'>now</NavLink></li>\n                <li><NavLink onClick={setTypeForecast} to='/forecast' activeClassName='active'>forecast</NavLink></li>\n            </ul>\n        </nav>\n    )\n}\n\nexport default MyNavbar\n","import React, {useContext} from 'react';\nimport Loader from \"react-loader-spinner\";\n\nimport Context from '../context/Context';\nimport {WiWindy, WiDaySunny, WiLightning, WiRainWind, WiCloudy, WiSnowflakeCold} from 'react-icons/wi'\n\nconst Clouds = () => {\n    const {state} = useContext(Context)\n   \n    console.log(state)\n\n    const description = state.type === 'weather'? (state.weather.weather? state.weather.weather[0].description : '' ): (state.forecast.list?  state.forecast.list[0].weather[0].description : '')\n        \n\n    const wIcons = () => {\n\n        console.log(state)\n        \n        const current = state.type === 'weather'?\n        (state.weather.weather ?  state.weather.weather[0].main : \"\") :(state.forecast.list? state.forecast.list[0].weather[0].main : '') \n        \n\n        switch (current) {\n            case 'Thunderstorm':\n                return <WiLightning size={50} color='lightskyblue'/>;\n            case 'Clear':\n                return <WiDaySunny size={50} color='lightskyblue'/>;\n            case 'Clouds':\n                return <WiCloudy size={50} color='lightskyblue'/>;\n            case 'Rain':\n                return <WiRainWind size={50} color='lightskyblue'/>;\n            case 'Snow':\n                return <WiSnowflakeCold size={50} color='lightskyblue'/>;\n            case 'Drizzle' :\n                return <WiRainWind size={50} color='lightskyblue'/>;\n            case 'Mist' || \"Smoke\" || 'Haze' || 'Dust' || 'Fog' || 'Sand' || 'Ash' || 'Squall' || 'Tornado':\n                return <WiWindy size={50} color='lightskyblue'/>;\n            default: \n                return '';\n        }\n    }  \n\n   \n    return (\n        <div>\n            <div>{description ? `${description}` : <Loader type=\"TailSpin\" color=\"black\" width={30} height={30}/>}</div>\n            <p>{wIcons()}</p>\n\n        </div>\n    )\n}\n\nexport default Clouds\n","import React, {useContext} from 'react'\nimport Context from '../context/Context';\nimport Loader from \"react-loader-spinner\";\nimport Clouds from './Clouds';\n\n\n\nconst CurrentCard = () => {\n\n    const {state} = useContext(Context)\n\n    console.log(state)\n    // temperature\n    const temp = state.weather.main?  (state.weather.main.temp).toFixed() : false\n    const feelTemp = state.weather.main?  (state.weather.main.feels_like).toFixed() : false\n\n    // WIND\n    const wind = state.weather.wind ? (state.weather.wind.speed) : false\n   \n    return (\n        <div className='currentCard'>\n            <div>\n                <h2>{temp ? `${temp} ° Celsius` : <div className='spinnerTemp'> temperature: <Loader type=\"TailSpin\" color=\"black\" width={15} height={15}/></div>}  </h2>\n                \n                <h5>{temp ? `feels like ${feelTemp} ° Celsius` : \" \"   }  </h5>\n            </div>\n            <Clouds/>\n            <div>\n                <p> wind: {wind? `${wind} m/sec` : <Loader type=\"TailSpin\" color=\"black\" width={15} height={15}/> }</p>\n            </div>\n        </div>\n    )\n}\n\nexport default CurrentCard\n","import React, {useContext} from 'react'\nimport Context from '../context/Context';\nimport Loader from \"react-loader-spinner\";\nimport Clouds from './Clouds';\n\nconst Forecast3H = () => {\n\n    const {state} = useContext(Context)\n\n    // temperature\n    const temp = state.forecast.list?  (state.forecast.list[0].main.temp).toFixed() : false\n    const feelTemp = state.forecast.list?  (state.forecast.list[0].main.temp).toFixed() : false\n\n  \n  console.log(state)\n    return (\n        <div className='forecast3h'>\n            <p className='title'>3 hours from now</p>\n            <div className='body'>\n                <h2>{temp ? `${temp} ° Celsius` : <div className='spinnerTemp'> temperature: <Loader type=\"TailSpin\" color=\"black\" width={15} height={15}/></div>}  </h2>\n                <h5>{temp ? `feels like ${feelTemp} ° Celsius` : \" \"   }  </h5>\n                <Clouds/>\n            </div>\n        </div>\n    )\n}\n\nexport default Forecast3H\n","import React, {useContext} from 'react'\nimport Context from '../context/Context';\nimport Loader from \"react-loader-spinner\";\n\nconst ForecastTomorrow = () => {\n    const {state} = useContext(Context)\n\n    // temperature\n    const tempMin = state.forecast.list?  (state.forecast.list[1].main.temp_min).toFixed() : false\n    const tempMax = state.forecast.list?  (state.forecast.list[1].main.temp_max).toFixed() : false\n\n  \n    let date = new Date();\n    let nextDay = new Date(date);\n    nextDay.setDate(date.getDate() + 1);\n\n    const year = nextDay.getFullYear();\n    const month = nextDay.getMonth()+1;\n    const day = nextDay.getDate();\n    const nextDayString = month < 10? `${year}-0${month}-${day} 00:00:00` : `${year}-${month}-${day} 00:00:00`\n   \n    const filteredState = state.forecast.list? \n        (state.forecast.list.map((item, index)=>{ return item.dt_txt})) \n        : []\n    const index = state.forecast.list? filteredState.indexOf(nextDayString): ''\n    \n    const arrAllIndex = [index+2, index+4, index+6]\n    const nextDate = `${year}-${month}-${day}`\n\n\n    return (\n        <div>\n            <p className='title'>tomorrow {nextDate}</p>\n            <div className=' bodyTomorrow'>\n                {arrAllIndex.map((item, i)=>{\n                   return state.forecast.list? <div className='forecastItems' key={i}>\n                                                    <p>{state.forecast.list[item].dt_txt.slice(11, 16)}</p>\n                                                    <p>{state.forecast.list[item].main.temp.toFixed()} °C</p>\n                                                    <p>{state.forecast.list[item].weather[0].description}</p>\n                                                    </div> \n                                                : false \n                })}\n\n            </div>\n        </div>\n    )\n}\n\nexport default ForecastTomorrow\n","import React from 'react'\nimport Forecast3H from './Forecast3H';\nimport ForecastTomorrow from './ForecastTomorrow';\n\nconst ForecastCard = () => {\n    \n    return (\n        <div className='forecastCard'>\n            <Forecast3H/>\n            <ForecastTomorrow/>\n        </div>\n    )\n}\n\nexport default ForecastCard\n","import React from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nimport GlobalState from './context/GlobalState';\nimport './scss/main.scss'\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\n\nimport bgImage from './images/bgImage3.svg'\nimport SearchBar from './components/SearchBar';\nimport MyNavbar from './components/MyNavbar';\nimport CurrentCard from './components/CurrentCard';\nimport ForecastCard from './components/ForecastCard';\n\n\nfunction App() {\n\n  return (\n    <Router>\n      <div className=\"App\" style={{backgroundImage: `url(${bgImage})`}}>\n        <GlobalState>\n          <SearchBar/>\n          \n          <MyNavbar/>\n          <Switch>\n            <Route path='/now' component={CurrentCard}/>\n            <Route path='/forecast' component={ForecastCard}/>\n          </Switch>\n\n        </GlobalState>\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}